function _toConsumableArray(e){if(Array.isArray(e)){for(var r=0,t=Array(e.length);r<e.length;r++)t[r]=e[r];return t}return Array.from(e)}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(r,t,n){return t&&e(r.prototype,t),n&&e(r,n),r}}();!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r(require("debug"),require("event-emitter"),require("event-emitter/all-off")):"function"==typeof define&&define.amd?define(["debug","event-emitter","event-emitter/all-off"],r):e.transceiver=r(e.debug,e.EventEmitter,e.allOff)}(this,function(e,r,t){"use strict";var n=function(){function n(t){_classCallCheck(this,n),this.name=t,this.requestHandlers={},this.emitter=new r,this.dbg=e("transceiver:channel:"+t)}return _createClass(n,[{key:"reply",value:function(){if("object"==typeof arguments[0])this.createMultipleHandlers.apply(this,arguments);else{if("string"!=typeof arguments[0])throw new Error("Invalid request name");this.createHandler.apply(this,arguments)}return this}},{key:"createHandler",value:function(e,r,t){if(this.dbg("Defining new handler for request '"+e+"'"),"function"!=typeof r)throw new Error("Invalid or missing callback");this.requestHandlers[e]&&this.dbg("Warning: Request '"+e+"' handler will be overwritten"),this.requestHandlers[e]={callback:r,context:t||this}}},{key:"createMultipleHandlers",value:function(e,r){var t=!0,n=!1,i=void 0;try{for(var a,s=Object.keys(e)[Symbol.iterator]();!(t=(a=s.next()).done);t=!0){var o=a.value;this.createHandler(o,e[o],r)}}catch(l){n=!0,i=l}finally{try{!t&&s["return"]&&s["return"]()}finally{if(n)throw i}}}},{key:"replyPromise",value:function(){if("function"!=typeof this.Promise)throw new Error("No global Promise constructor has been found. Use transceiver.setPromise(Promise) to specify one.");if("object"==typeof arguments[0])this.createMultiplePromiseHandlers.apply(this,arguments);else{if("string"!=typeof arguments[0])throw new Error("Invalid request name");this.createPromiseHandler.apply(this,arguments)}return this}},{key:"createPromiseHandler",value:function(e,r,t){var n=this;if("function"!=typeof r)throw new Error("Invalid or missing callback");this.createHandler(e,function(){return new n.Promise(r.bind(t||n))})}},{key:"createMultiplePromiseHandlers",value:function(e,r){var t=!0,n=!1,i=void 0;try{for(var a,s=Object.keys(e)[Symbol.iterator]();!(t=(a=s.next()).done);t=!0){var o=a.value;this.createPromiseHandler(o,e[o],r)}}catch(l){n=!0,i=l}finally{try{!t&&s["return"]&&s["return"]()}finally{if(n)throw i}}}},{key:"request",value:function(){if(Array.isArray(arguments[0]))return this.requestArray.apply(this,arguments);if("object"==typeof arguments[0])return this.requestProps.apply(this,arguments);if("string"==typeof arguments[0])return this.callHandler.apply(this,arguments);throw new Error("Invalid request name")}},{key:"callHandler",value:function(e){if(this.requestHandlers[e]){this.dbg("Calling '"+e+"' request handler");for(var r=arguments.length,t=Array(r>1?r-1:0),n=1;r>n;n++)t[n-1]=arguments[n];return this.Promise?this.Promise.resolve(this.requestHandlers[e].callback.apply(this.requestHandlers[e].context,t)):this.requestHandlers[e].callback.apply(this.requestHandlers[e].context,t)}this.dbg("Warning: Request '"+e+"' has no handler")}},{key:"requestArray",value:function(e){if(Array.isArray(e))return e.map(this.callHandler,this);if("object"==typeof e){var r=[],t=!0,n=!1,i=void 0;try{for(var a,s=Object.keys(e)[Symbol.iterator]();!(t=(a=s.next()).done);t=!0){var o=a.value;r.push(this.callHandler.apply(this,[o].concat(_toConsumableArray(e[o]))))}}catch(l){n=!0,i=l}finally{try{!t&&s["return"]&&s["return"]()}finally{if(n)throw i}}return r}throw new Error("Invalid parameter: requests must be an array or an object of requests")}},{key:"requestProps",value:function(e){var r=this,t={};if(Array.isArray(e))e.forEach(function(e){t[e]=r.callHandler(e)});else{if("object"!=typeof e)throw new Error("Invalid parameter: requests must be an array or an object of requests");var n=!0,i=!1,a=void 0;try{for(var s,o=Object.keys(e)[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var l=s.value;t[l]=this.callHandler.apply(this,[l].concat(_toConsumableArray(e[l])))}}catch(u){i=!0,a=u}finally{try{!n&&o["return"]&&o["return"]()}finally{if(i)throw a}}}return t}},{key:"all",value:function(e){if("function"!=typeof this.Promise)throw new Error("No global Promise constructor has been found. Use transceiver.setPromise(Promise) to specify one.");return this.Promise.all(this.requestArray(e))}},{key:"race",value:function(e){if("function"!=typeof this.Promise)throw new Error("No global Promise constructor has been found. Use transceiver.setPromise(Promise) to specify one.");return this.Promise.race(this.requestArray(e))}},{key:"on",value:function(e){return this.dbg("Defining new handler for event '"+e+"'"),this.emitter.on.apply(this.emitter,arguments),this}},{key:"once",value:function(e,r){var t=this;return this.dbg("Defining new one-time handler for event '"+e+"'"),!r&&this.Promise?new this.Promise(function(r){return t.emitter.once(e,r)}):void this.emitter.once.apply(this.emitter,arguments)}},{key:"emit",value:function(e){return this.dbg("Emitting new '"+e+"' event"),this.emitter.emit.apply(this.emitter,arguments),this}},{key:"off",value:function(e){return this.dbg("Removing new handler for event '"+e+"'"),this.emitter.off.apply(this.emitter,arguments),this}},{key:"reset",value:function(){return this.dbg("Resetting channel"),this.requestHandlers={},t(this.emitter),this}}]),n}(),i=e("transceiver:main"),a=new(function(){function e(){_classCallCheck(this,e),i("Initializing transceiver"),this.channels={},this.Promise=Promise}return _createClass(e,[{key:"channel",value:function(e){if("string"!=typeof e)throw new Error("Invalid or missing channel name");return this.channels[e]||(i("Initializing channel "+e),this.channels[e]=new n(e),this.channels[e].Promise=this.Promise),this.channels[e]}},{key:"request",value:function(e){for(var r,t=arguments.length,n=Array(t>1?t-1:0),i=1;t>i;i++)n[i-1]=arguments[i];return(r=this.channel(e)).request.apply(r,n)}},{key:"reply",value:function(e){for(var r,t=arguments.length,n=Array(t>1?t-1:0),i=1;t>i;i++)n[i-1]=arguments[i];return(r=this.channel(e)).reply.apply(r,n)}},{key:"setPromise",value:function(e){i("Setting external promise constructor"),this.Promise=e;var r=!0,t=!1,n=void 0;try{for(var a,s=Object.keys(this.channels)[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var o=a.value;this.channels[o].Promise=this.Promise}}catch(l){t=!0,n=l}finally{try{!r&&s["return"]&&s["return"]()}finally{if(t)throw n}}}}]),e}());return a});
//# sourceMappingURL=transceiver.min.js.map
