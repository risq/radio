function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("debug"),require("event-emitter"),require("event-emitter/all-off")):"function"==typeof define&&define.amd?define(["debug","event-emitter","event-emitter/all-off"],t):e.transceiver=t(e.debug,e.EventEmitter,e.allOff)}(this,function(e,t,n){"use strict";var r=e("transceiver:channel"),i=function(){function i(n){_classCallCheck(this,i),r("Initializing channel "+n),this.name=n,this.requestHandlers={},this.emitter=new t,this.dbg=e("transceiver:channel:"+n)}return _createClass(i,[{key:"request",value:function(e){if(this.requestHandlers[e]){this.dbg("Calling '"+e+"' request handler");for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;t>r;r++)n[r-1]=arguments[r];return this.requestHandlers[e].callback.apply(this.requestHandlers[e].context,n)}this.dbg("Request '"+e+"' has no handler")}},{key:"reply",value:function(e,t,n){this.dbg("Creating new handler for request '"+e+"'"),this.requestHandlers[e]&&this.dbg("Request '"+e+"' handler will be overwritten"),this.requestHandlers[e]={callback:t,context:n||this}}},{key:"on",value:function(){this.emitter.on.apply(this.emitter,arguments)}},{key:"emit",value:function(){this.emitter.emit.apply(this.emitter,arguments)}},{key:"off",value:function(){this.emitter.off.apply(this.emitter,arguments)}},{key:"reset",value:function(){this.dbg("Resetting channel"),this.requestHandlers={},n(this.emitter)}}]),i}(),a=e("transceiver:main"),s=new(function(){function e(){_classCallCheck(this,e),a("Initializing transceiver"),this.channels={}}return _createClass(e,[{key:"channel",value:function(e){if(!e||"string"!=typeof e)throw new Error("Invalid or missing channel name");return this.channels[e]||(this.channels[e]=new i(e)),this.channels[e]}}]),e}());return s});
//# sourceMappingURL=transceiver.min.js.map
